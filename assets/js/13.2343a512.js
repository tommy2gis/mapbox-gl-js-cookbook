(window.webpackJsonp=window.webpackJsonp||[]).push([[13,51],{170:function(e,t,i){"use strict";var n=i(30),o=i(98)(0),a=i(109)([].forEach,!0);n(n.P+n.F*!a,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},180:function(e,t){},184:function(e,t){},189:function(e,t,i){"use strict";var n=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN};var o,a,r=(1===(o=n).length&&(a=o,o=function(e,t){return n(a(e),t)}),{left:function(e,t,i,n){for(null==i&&(i=0),null==n&&(n=e.length);i<n;){var a=i+n>>>1;o(e[a],t)<0?i=a+1:n=a}return i},right:function(e,t,i,n){for(null==i&&(i=0),null==n&&(n=e.length);i<n;){var a=i+n>>>1;o(e[a],t)>0?n=a:i=a+1}return i}}),s=r.right;var l=function(e){return null===e?NaN:+e},c=Array.prototype,u=(c.slice,c.map,Math.sqrt(50)),d=Math.sqrt(10),g=Math.sqrt(2),h=function(e,t,i){var n,o,a,r,s=-1;if(i=+i,(e=+e)===(t=+t)&&i>0)return[e];if((n=t<e)&&(o=e,e=t,t=o),0===(r=p(e,t,i))||!isFinite(r))return[];if(r>0)for(e=Math.ceil(e/r),t=Math.floor(t/r),a=new Array(o=Math.ceil(t-e+1));++s<o;)a[s]=(e+s)*r;else for(e=Math.floor(e*r),t=Math.ceil(t*r),a=new Array(o=Math.ceil(e-t+1));++s<o;)a[s]=(e-s)/r;return n&&a.reverse(),a};function p(e,t,i){var n=(t-e)/Math.max(0,i),o=Math.floor(Math.log(n)/Math.LN10),a=n/Math.pow(10,o);return o>=0?(a>=u?10:a>=d?5:a>=g?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(a>=u?10:a>=d?5:a>=g?2:1)}function f(e,t,i){var n=Math.abs(t-e)/Math.max(0,i),o=Math.pow(10,Math.floor(Math.log(n)/Math.LN10)),a=n/o;return a>=u?o*=10:a>=d?o*=5:a>=g&&(o*=2),t<e?-o:o}var m=function(e,t,i){if(null==i&&(i=l),n=e.length){if((t=+t)<=0||n<2)return+i(e[0],0,e);if(t>=1)return+i(e[n-1],n-1,e);var n,o=(n-1)*t,a=Math.floor(o),r=+i(e[a],a,e);return r+(+i(e[a+1],a+1,e)-r)*(o-a)}};i.d(t,"b",(function(){return s})),i.d(t,"a",(function(){return n})),i.d(t,"c",(function(){return m})),i.d(t,"f",(function(){return h})),i.d(t,"d",(function(){return p})),i.d(t,"e",(function(){return f}))},205:function(e,t,i){var n=i(11).f,o=Function.prototype,a=/^\s*function ([^ (]*)/;"name"in o||i(1)&&n(o,"name",{configurable:!0,get:function(){try{return(""+this).match(a)[1]}catch(e){return""}}})},231:function(e,t,i){"use strict";function n(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}i.d(t,"a",(function(){return n}))},247:function(e,t,i){"use strict";var n=i(57),o=i(58),a=i(64),r=i(63),s=i(86),l=i(65),c=i(330),u=i(333),d=i(314),g=i(396),h=i(477);i.d(t,"a",(function(){return m}));var p=[0,0,0,255],f={radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,getPosition:{type:"accessor",value:function(e){return e.position}},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:p},getLineColor:{type:"accessor",value:p},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}},m=function(e){function t(){return Object(n.a)(this,t),Object(a.a)(this,Object(r.a)(t).apply(this,arguments))}return Object(l.a)(t,e),Object(o.a)(t,[{key:"getShaders",value:function(e){return Object(s.a)(Object(r.a)(t.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = smoothedge(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[c.a,u.a]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,normalized:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}},{key:"updateState",value:function(e){var i=e.props,n=e.oldProps,o=e.changeFlags;if(Object(s.a)(Object(r.a)(t.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:o}),o.extensionsChanged){var a=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(a)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,i=this.context.viewport,n=this.props,o=n.radiusScale,a=n.radiusMinPixels,r=n.radiusMaxPixels,s=n.stroked,l=n.filled,c=n.lineWidthUnits,u=n.lineWidthScale,d=n.lineWidthMinPixels,g=n.lineWidthMaxPixels,h="pixels"===c?i.metersPerPixel:1;this.state.model.setUniforms(t).setUniforms({stroked:s?1:0,filled:l,radiusScale:o,radiusMinPixels:a,radiusMaxPixels:r,lineWidthScale:u*h,lineWidthMinPixels:d,lineWidthMaxPixels:g}).draw()}},{key:"_getModel",value:function(e){return new g.a(e,Object.assign(this.getShaders(),{id:this.props.id,geometry:new h.a({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,-1,1,0,1,1,0,1,-1,0])}}}),isInstanced:!0}))}}]),t}(d.a);m.layerName="ScatterplotLayer",m.defaultProps=f},273:function(e,t,i){"use strict";var n=i(30),o=i(98)(5),a=!0;"find"in[]&&Array(1).find((function(){a=!1})),n(n.P+n.F*a,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),i(147)("find")},464:function(e,t,i){var n=i(30);n(n.S,"Math",{sign:i(465)})},465:function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},56:function(e,t,i){},59:function(e,t,i){"use strict";i.d(t,"a",(function(){return n}));var n={DEFAULT:"mapbox://styles/huanglii/ck1n985b20oan1cmhp4i0o9c9?optimize=true",SATELLITE:"mapbox://styles/mapbox/satellite-v9",DARK:"mapbox://styles/huanglii/ck1ocwsbl1fja1cloy67tyefi?optimize=true",GRAY:"mapbox://styles/huanglii/ck1naxpm00gvj1co6r4pxgxzl?optimize=true",MONOCHROME:"mapbox://styles/huanglii/ck3gplwrs0baz1cpe6mgy8aap?optimize=true",FLUORESCENCE:"mapbox://styles/huanglii/ck23131s00los1cnz1qjms49i?optimize=true",WATERLIGHT:"mapbox://styles/huanglii/cjweb960x1nbn1drxxtuaz9cr?optimize=true"}},61:function(e,t,i){"use strict";var n=i(56);i.n(n).a},612:function(e,t,i){"use strict";var n=i(57),o=i(58),a=i(64),r=i(63),s=i(65),l=i(97),c=i(481),u=i(247),d=i(246),g=i(316),h=i(282);function p(e,t){for(var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},o=i.startRow,a=void 0===o?0:o,r=i.endRow,s=void 0===r?e.length:r,c=a;c<s;c++){var u=e[c];l.a.assert(u&&u.geometry,"GeoJSON does not have geometry");var d=u.geometry;if("GeometryCollection"===d.type){l.a.assert(Array.isArray(d.geometries),"GeoJSON does not have geometries array");for(var g=d.geometries,h=0;h<g.length;h++){var p=g[h];f(p,n,t,u,c)}}else f(d,n,t,u,c)}return n}function f(e,t,i,n,o){var a=e.type,r=e.coordinates,s=t.pointFeatures,c=t.lineFeatures,u=t.polygonFeatures,d=t.polygonOutlineFeatures;if(function(e,t){var i=m[e];l.a.assert(i,"Unknown GeoJSON type ".concat(e));for(;t&&--i>0;)t=t[0];return t&&Number.isFinite(t[0])}(a,r))switch(a){case"Point":s.push(i({geometry:e},n,o));break;case"MultiPoint":r.forEach((function(e){s.push(i({geometry:{type:"Point",coordinates:e}},n,o))}));break;case"LineString":c.push(i({geometry:e},n,o));break;case"MultiLineString":r.forEach((function(e){c.push(i({geometry:{type:"LineString",coordinates:e}},n,o))}));break;case"Polygon":u.push(i({geometry:e},n,o)),r.forEach((function(e){d.push(i({geometry:{type:"LineString",coordinates:e}},n,o))}));break;case"MultiPolygon":r.forEach((function(e){u.push(i({geometry:{type:"Polygon",coordinates:e}},n,o)),e.forEach((function(e){d.push(i({geometry:{type:"LineString",coordinates:e}},n,o))}))}))}else l.a.warn("".concat(a," coordinates are malformed"))()}var m={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};i.d(t,"a",(function(){return b}));var v={stroked:!0,filled:!0,extruded:!1,wireframe:!1,lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,elevationScale:1,pointRadiusScale:1,pointRadiusMinPixels:0,pointRadiusMaxPixels:Number.MAX_SAFE_INTEGER,getLineColor:{type:"accessor",value:[0,0,0,255]},getFillColor:{type:"accessor",value:[0,0,0,255]},getRadius:{type:"accessor",value:1},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0};function y(e){return e.geometry.coordinates}var b=function(e){function t(){return Object(n.a)(this,t),Object(a.a)(this,Object(r.a)(t).apply(this,arguments))}return Object(s.a)(t,e),Object(o.a)(t,[{key:"initializeState",value:function(){this.state={features:{}},this.props.getLineDashArray&&l.a.removed("getLineDashArray","PathStyleExtension")()}},{key:"updateState",value:function(e){var t=e.props,i=e.changeFlags;if(i.dataChanged){var n=function(e){if(Array.isArray(e))return e;switch(l.a.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return l.a.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}(t.data),o=this.getSubLayerRow.bind(this);if(Array.isArray(i.dataChanged)){var a=this.state.features,r={},s={};for(var c in a)r[c]=a[c].slice(),s[c]=[];var u=!0,d=!1,g=void 0;try{for(var f,m=i.dataChanged[Symbol.iterator]();!(u=(f=m.next()).done);u=!0){var v=f.value,y=p(n,o,v);for(var b in a)s[b].push(Object(h.a)({data:r[b],getIndex:function(e){return e.__source.index},dataRange:v,replace:y[b]}))}}catch(e){d=!0,g=e}finally{try{u||null==m.return||m.return()}finally{if(d)throw g}}this.setState({features:r,featuresDiff:s})}else this.setState({features:p(n,o),featuresDiff:{}})}}},{key:"renderLayers",value:function(){var e=this.state,t=e.features,i=e.featuresDiff,n=t.pointFeatures,o=t.lineFeatures,a=t.polygonFeatures,r=t.polygonOutlineFeatures,s=this.props,l=s.stroked,c=s.filled,h=s.extruded,p=s.wireframe,f=s.material,m=s.transitions,v=this.props,b=v.lineWidthUnits,x=v.lineWidthScale,P=v.lineWidthMinPixels,C=v.lineWidthMaxPixels,L=v.lineJointRounded,S=v.lineMiterLimit,_=v.pointRadiusScale,M=v.pointRadiusMinPixels,w=v.pointRadiusMaxPixels,F=v.elevationScale,O=v.lineDashJustified,R=this.props,A=R.getLineColor,k=R.getFillColor,E=R.getRadius,j=R.getLineWidth,z=R.getLineDashArray,W=R.getElevation,T=R.updateTriggers,N=this.getSubLayerClass("polygons-fill",g.a),D=this.getSubLayerClass("polygons-stroke",d.a),I=this.getSubLayerClass("line-strings",d.a),G=this.getSubLayerClass("points",u.a),H=this.shouldRenderSubLayer("polygons-fill",a)&&new N({_dataDiff:i.polygonFeatures&&function(){return i.polygonFeatures},extruded:h,elevationScale:F,filled:c,wireframe:p,material:f,getElevation:this.getSubLayerAccessor(W),getFillColor:this.getSubLayerAccessor(k),getLineColor:this.getSubLayerAccessor(A),transitions:m&&{getPolygon:m.geometry,getElevation:m.getElevation,getFillColor:m.getFillColor,getLineColor:m.getLineColor}},this.getSubLayerProps({id:"polygons-fill",updateTriggers:{getElevation:T.getElevation,getFillColor:T.getFillColor,getLineColor:T.getLineColor}}),{data:a,getPolygon:y});return[!h&&H,!h&&l&&this.shouldRenderSubLayer("polygons-stroke",r)&&new D({_dataDiff:i.polygonOutlineFeatures&&function(){return i.polygonOutlineFeatures},widthUnits:b,widthScale:x,widthMinPixels:P,widthMaxPixels:C,rounded:L,miterLimit:S,dashJustified:O,getColor:this.getSubLayerAccessor(A),getWidth:this.getSubLayerAccessor(j),getDashArray:this.getSubLayerAccessor(z),transitions:m&&{getPath:m.geometry,getColor:m.getLineColor,getWidth:m.getLineWidth}},this.getSubLayerProps({id:"polygons-stroke",updateTriggers:{getColor:T.getLineColor,getWidth:T.getLineWidth,getDashArray:T.getLineDashArray}}),{data:r,getPath:y}),this.shouldRenderSubLayer("linestrings",o)&&new I({_dataDiff:i.lineFeatures&&function(){return i.lineFeatures},widthUnits:b,widthScale:x,widthMinPixels:P,widthMaxPixels:C,rounded:L,miterLimit:S,dashJustified:O,getColor:this.getSubLayerAccessor(A),getWidth:this.getSubLayerAccessor(j),getDashArray:this.getSubLayerAccessor(z),transitions:m&&{getPath:m.geometry,getColor:m.getLineColor,getWidth:m.getLineWidth}},this.getSubLayerProps({id:"line-strings",updateTriggers:{getColor:T.getLineColor,getWidth:T.getLineWidth,getDashArray:T.getLineDashArray}}),{data:o,getPath:y}),this.shouldRenderSubLayer("points",n)&&new G({_dataDiff:i.pointFeatures&&function(){return i.pointFeatures},stroked:l,filled:c,radiusScale:_,radiusMinPixels:M,radiusMaxPixels:w,lineWidthUnits:b,lineWidthScale:x,lineWidthMinPixels:P,lineWidthMaxPixels:C,getFillColor:this.getSubLayerAccessor(k),getLineColor:this.getSubLayerAccessor(A),getRadius:this.getSubLayerAccessor(E),getLineWidth:this.getSubLayerAccessor(j),transitions:m&&{getPosition:m.geometry,getFillColor:m.getFillColor,getLineColor:m.getLineColor,getRadius:m.getRadius,getLineWidth:m.getLineWidth}},this.getSubLayerProps({id:"points",updateTriggers:{getFillColor:T.getFillColor,getLineColor:T.getLineColor,getRadius:T.getRadius,getLineWidth:T.getLineWidth}}),{data:n,getPosition:y}),h&&H]}}]),t}(c.a);b.layerName="GeoJsonLayer",b.defaultProps=v},62:function(e,t,i){"use strict";i.r(t);i(67),i(68),i(66),i(31);var n=i(76),o=i.n(n),a=i(71),r=i.n(a),s=(i(77),i(73)),l=i(74),c=function(){function e(t){Object(s.a)(this,e),this._className="mapboxgl-ctrl",this._options=Object.assign({},{zoom:1,center:[0,0]},t),this._onClickHome=this._onClickHome.bind(this)}return Object(l.a)(e,[{key:"onAdd",value:function(e){return this._map=e,this._container=u.create("div","".concat(this._className," mapboxgl-ctrl-group")),this._render(),this._container}},{key:"onRemove",value:function(){u.remove(this._container),this._map=void 0}},{key:"_render",value:function(){var e=u.create("button","".concat(this._className,"-icon ").concat(this._className,"-home"),this._container);e.type="button",e.addEventListener("click",this._onClickHome)}},{key:"_onClickHome",value:function(){this._map.easeTo(this._options)}}]),e}(),u={create:function(e,t,i){var n=window.document.createElement(e);return void 0!==t&&(n.className=t),i&&i.appendChild(n),n},remove:function(e){e.parentNode&&e.parentNode.removeChild(e)}},d=i(59),g=(i(78),{name:"base-map",props:{height:{type:Number,default:520},mapOptions:{type:Object},mapClickable:{type:Boolean,default:!0},borderOptions:{type:Object}},data:function(){return{map:null,maploaded:!1,mapDefaultOptions:{container:o()(),style:d.a.DEFAULT,center:[-74.5,40],zoom:6,minZoom:0,maxZoom:22,scrollZoom:!0,pitch:0,bearing:0,antialias:!1},borderDefaultOptions:{layout:{visibility:"none"},paint:{"line-color":"hsl(357, 67%, 60%)","line-opacity":["step",["zoom"],1,10,0],"line-width":["interpolate",["linear"],["zoom"],0,1,22,3]},beforeId:""}}},computed:{mapContainer:function(){return this.mapOptions.container||this.mapDefaultOptions.container}},mounted:function(){var e=Object.assign({},this.mapDefaultOptions,this.mapOptions);this.initMap(e),window.addEventListener("resize",this.resize)},methods:{initMap:function(e){r.a.accessToken="pk.eyJ1IjoiaHVhbmdsaWkiLCJhIjoiY2pzNHBtendwMDZ2ZDQzbnVmZXdtMDlvdiJ9.GSija86yNNR4ssBtFFpx0g",this.map=new r.a.Map(e),this.map.addControl(new r.a.NavigationControl,"top-left");var t=e.center,i=e.zoom,n=e.pitch,o=e.bearing;this.map.addControl(new c({center:t,zoom:i,pitch:n,bearing:o}),"bottom-left"),this.map.addControl(new r.a.FullscreenControl,"top-left"),this.map.on("load",this.handleMapLoaded)},handleMapLoaded:function(e){this.maploaded=!0,this.$emit("load",e.target),this.mapClickable&&this.map.on("click",this.handleMapClick)},handleMapClick:function(e){console.log(e.lngLat);var t=this.map.queryRenderedFeatures(e.point);if(t.length>0){var i=t[0],n=i.layer,o=i.properties;Object.keys(o).length>0&&(new r.a.Popup).setLngLat(e.lngLat).setHTML(this.createPropHtml(n.id,o)).addTo(this.map)}},createPropHtml:function(e,t){return'\n        <div class="title"><b>'.concat(e,'</b></div>\n        <div class="content">\n          ').concat(Object.keys(t).map((function(e){return"".concat("<p><b>".concat(e,": </b>").concat(t[e],"</p>"))})).join(""),"\n        </div>\n      ")},addBorderLayer:function(){var e=Object.assign({},this.borderDefaultOptions,this.borderOptions),t=e.layout,i=e.paint,n=e.beforeId;this.map.addSource("border",{type:"vector",url:"mapbox://huanglii.4nxu8jv0"}),this.map.addLayer({id:"border-2oej0r",source:"border","source-layer":"Border-2oej0r",type:"line",layout:t,paint:i},n||void 0)},resize:function(){this.map.resize()}}}),h=(i(61),i(0)),p=Object(h.a)(g,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"map-wrapper"},[t("div",{style:{width:"100%",height:this.height+"px",borderRadius:"6px"},attrs:{id:this.mapContainer}},[this._t("custom")],2),this._v(" "),this.maploaded?this._t("default"):this._e()],2)}),[],!1,null,null,null);t.default=p.exports},644:function(e,t,i){"use strict";i.r(t);var n=i(62),o=i(59),a=(i(464),i(170),i(67),i(68),i(66),i(205),i(273),i(641)),r=i(612),s=i(57),l=i(58),c=i(64),u=i(63),d=i(86),g=i(65),h=i(333),p=i(314),f=i(396),m=i(477),v=[0,0,0,255],y={getSourcePosition:{type:"accessor",value:function(e){return e.sourcePosition}},getTargetPosition:{type:"accessor",value:function(e){return e.targetPosition}},getSourceColor:{type:"accessor",value:v},getTargetColor:{type:"accessor",value:v},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}},b=function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(g.a)(t,e),Object(l.a)(t,[{key:"getShaders",value:function(){return Object(d.a)(Object(u.a)(t.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nfloat paraboloid(vec3 source, vec3 target, float ratio) {\n\n  vec3 delta = target - source;\n  float dh = length(delta.xy) * instanceHeights;\n  float unitZ = delta.z / dh;\n  float p2 = unitZ * unitZ + 1.0;\n  float dir = step(delta.z, 0.0);\n  float z0 = mix(source.z, target.z, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 getPos(vec3 source, vec3 target, float segmentRatio) {\n  float z = paraboloid(source, target, segmentRatio);\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target.xy - source.xy);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n\n  return vec3(\n    mix(source.xy, target.xy, segmentRatio) + tilt,\n    z * cos(tiltAngle)\n  );\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  vec3 source = project_position(instanceSourcePositions, instanceSourcePositions64Low);\n  vec3 target = project_position(instanceTargetPositions, instanceTargetPositions64Low);\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  float nextSegmentRatio = getSegmentRatio(segmentIndex + indexDir);\n\n  vec3 currPos = getPos(source, target, segmentRatio);\n  vec3 nextPos = getPos(source, target, nextSegmentRatio);\n  vec4 curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n  vec4 next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n  geometry.position = vec4(currPos, 1.0);\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[h.a]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getSourceColor",defaultValue:v},instanceTargetColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getTargetColor",defaultValue:v},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}},{key:"updateState",value:function(e){var i=e.props,n=e.oldProps,o=e.changeFlags;if(Object(d.a)(Object(u.a)(t.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:o}),o.extensionsChanged){var a=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(a)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,i=this.context.viewport,n=this.props,o=n.widthUnits,a=n.widthScale,r=n.widthMinPixels,s=n.widthMaxPixels,l="pixels"===o?i.metersPerPixel:1;this.state.model.setUniforms(Object.assign({},t,{widthScale:a*l,widthMinPixels:r,widthMaxPixels:s})).draw()}},{key:"_getModel",value:function(e){for(var t=[],i=0;i<50;i++)t=t.concat([i,-1,0,i,1,0]);var n=new f.a(e,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new m.a({drawMode:5,attributes:{positions:new Float32Array(t)}}),isInstanced:!0}));return n.setUniforms({numSegments:50}),n}}]),t}(p.a);b.layerName="ArcLayer",b.defaultProps=y;var x=i(189),P=i(231);function C(){var e,t=[],i=[],n=[];function o(){var e=0,o=Math.max(1,i.length);for(n=new Array(o-1);++e<o;)n[e-1]=Object(x.c)(t,e/o);return a}function a(t){return isNaN(t=+t)?e:i[Object(x.b)(n,t)]}return a.invertExtent=function(e){var o=i.indexOf(e);return o<0?[NaN,NaN]:[o>0?n[o-1]:t[0],o<n.length?n[o]:t[t.length-1]]},a.domain=function(e){if(!arguments.length)return t.slice();t=[];for(let i of e)null==i||isNaN(i=+i)||t.push(i);return t.sort(x.a),o()},a.range=function(e){return arguments.length?(i=Array.from(e),o()):i.slice()},a.unknown=function(t){return arguments.length?(e=t,a):e},a.quantiles=function(){return n.slice()},a.copy=function(){return C().domain(t).range(i).unknown(e)},P.a.apply(a,arguments)}var L=[[255,255,204],[199,233,180],[127,205,187],[65,182,196],[29,145,192],[34,94,168],[12,44,132]],S=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[252,78,42],[227,26,28],[177,0,38]],_={longitude:-100,latitude:40.7,zoom:2.5,maxZoom:15,pitch:30,bearing:30};var M={components:{baseMap:n.default},data:function(){return{mapOptions:{style:o.a.GRAY,center:[-100,40.7],zoom:2.5,pitch:30,bearing:30},canvasId:"arc-canvas"}},methods:{handleMapLoaded:function(e){!function(e,t){var i,n={hoveredCountry:null,selectedCounty:null};function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.selectedCounty;if(e){t||(t=e.find((function(e){return"Los Angeles, CA"===e.properties.name})));var o=t.properties,a=o.flows,c=o.centroid,u=Object.keys(a).map((function(t){var i=e[t];return{source:c,target:i.properties.centroid,value:a[t]}})),d=C().domain(u.map((function(e){return Math.abs(e.value)}))).range(L.map((function(e,t){return t})));if(u.forEach((function(e){e.gain=Math.sign(e.value),e.quantile=d(Math.abs(e.value))})),n.onSelectCounty&&n.onSelectCounty(t),n.arcs=u,n.selectedCounty=t,i){var g={};Object.assign(g,l.props,{data:n.arcs});var h={};Object.assign(h,s.props,{data:n.data});var p=[new r.a(h),new b(g)];i.setProps({layers:p})}}}var s=new r.a({id:"geojson",data:n.data,stroked:!1,filled:!0,getFillColor:[0,0,0,0],pickable:!0,autoHighlight:!0,onHover:function(e){var t=e.x,i=e.y,o=e.object;n.x=t,n.y=i,n.hoveredCountry=o},onClick:function(e){var t=e.object;o(n.data,t)}}),l=new b({id:"arc",data:n.arcs,getSourcePosition:function(e){return e.source},getTargetPosition:function(e){return e.target},getSourceColor:function(e){return(e.gain>0?L:S)[e.quantile]},getTargetColor:function(e){return(e.gain>0?S:L)[e.quantile]},getWidth:2});i=new a.a({canvas:t,id:t,width:"100%",height:"100%",style:{postion:"relative",top:"0px"},initialViewState:_,controller:!0,onViewStateChange:function(t){var i=t.viewState;e.jumpTo({center:[i.longitude,i.latitude],zoom:i.zoom,bearing:i.bearing,pitch:i.pitch})},layers:[s,l]}),fetch("https://uber.osgis.cn/uber-common/deck.gl-data/master/examples/arc/counties.json").then((function(e){return e.json()})).then((function(e){var t=e.features;n.data=t,o(t)}))}(e,this.canvasId)}}},w=i(0),F=Object(w.a)(M,(function(){var e=this.$createElement,t=this._self._c||e;return t("base-map",{attrs:{"map-options":this.mapOptions},on:{load:this.handleMapLoaded}},[t("canvas",{staticStyle:{"z-index":"2"},attrs:{slot:"custom",id:this.canvasId},slot:"custom"})])}),[],!1,null,null,null);t.default=F.exports}}]);